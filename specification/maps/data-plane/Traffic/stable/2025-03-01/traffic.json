{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Traffic Service",
    "version": "2025-03-01",
    "description": "Azure Maps Traffic REST APIs"
  },
  "host": "atlas.microsoft.com",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "AADToken": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Microsoft Entra OAuth 2.0](https://docs.microsoft.com/azure/active-directory/develop/v1-overview) Flows. When paired with [Azure role-based access](https://docs.microsoft.com/azure/role-based-access-control/overview) control it can be used to control access to Azure Maps REST APIs. Azure role-based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a built-in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios, we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Notes\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to. This can be acquired from the [Maps management](https://aka.ms/amauthdetails) API.\n* \nThe `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Microsoft Entra ID configurations. \n* \nThe Azure role-based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n* \nUsage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* For more information on Microsoft identity platform, see [Microsoft identity platform overview](https://learn.microsoft.com/entra/identity-platform/v2-overview).",
      "scopes": {
        "https://atlas.microsoft.com/.default": "https://atlas.microsoft.com/.default"
      }
    },
    "SharedKey": {
      "type": "apiKey",
      "description": "This is a shared key that is provisioned when you [Create an Azure Maps account](https://docs.microsoft.com/azure/azure-maps/quick-demo-map-app#create-an-azure-maps-account) in the Azure portal or using PowerShell, CLI, Azure SDKs, or REST API.\n\n With this key, any application can access all REST API. In other words, this key can be used as a master key in the account that they are issued in.\n\n For publicly exposed applications, our recommendation is to use the [confidential client applications](https://docs.microsoft.com/azure/azure-maps/authentication-best-practices#confidential-client-applications) approach to access Azure Maps REST APIs so your key can be securely stored.",
      "name": "subscription-key",
      "in": "query"
    },
    "SasToken": {
      "type": "apiKey",
      "description": "This is a shared access signature token is created from the List SAS operation on the [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane via Azure portal, PowerShell, CLI, Azure SDKs, or REST APIs.\n\n With this token, any application is authorized to access with Azure role-based access controls and fine-grain control to the expiration, rate, and region(s) of use for the particular token. In other words, the SAS Token can be used to allow applications to control access in a more secured way than the shared key.\n\n For publicly exposed applications, our recommendation is to configure a specific list of allowed origins on the [Map account resource](https://aka.ms/amauth) to limit rendering abuse and regularly renew the SAS Token.",
      "name": "SAS Token",
      "in": "header"
    }
  },
  "security": [
    {
      "AADToken": [
        "https://atlas.microsoft.com/.default"
      ]
    },
    {
      "SharedKey": []
    },
    {
      "SasToken": []
    }
  ],
  "responses": {},
  "parameters": {
    "ApiVersion": {
      "name": "api-version",
      "description": "Version number of Azure Maps API.",
      "type": "string",
      "in": "query",
      "required": true,
      "default": "2025-03-01",
      "x-ms-parameter-location": "client"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "in": "header",
      "description": "Language in which traffic incident results should be returned. \n\nFor more information, see [Supported Languages](https://docs.microsoft.com/azure/azure-maps/supported-languages) for reference.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "client"
    }
  },
  "paths": {
    "/traffic/incident": {
      "get": {
        "summary": "Use to get information on traffic incidents inside a given bounding box.",
        "description": "\n\nThe `Traffic Incident` API is an HTTP `GET` request that provides information on traffic incidents inside a given bounding box.",
        "operationId": "Traffic_GetTrafficIncident",
        "x-ms-examples": {
          "Request information about a traffic incident": {
            "$ref": "./examples/GetTrafficIncident.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../Common/preview/1.0/common.json#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "incidentType",
            "in": "query",
            "description": "Specifies the type of traffic incident to return.",
            "required": false,
            "type": "string",
            "enum": [
              "Accident",
              "Congestion",
              "DisabledVehicle",
              "MassTransit",
              "Miscellaneous",
              "OtherNews",
              "PlannedEvent",
              "RoadHazard",
              "Construction",
              "Alert",
              "Weather"
            ],
            "x-ms-enum": {
              "name": "IncidentType",
              "modelAsString": true,
              "values": [
                {
                  "value": "Accident",
                  "description": ""
                },
                {
                  "value": "Congestion",
                  "description": ""
                },
                {
                  "value": "DisabledVehicle",
                  "description": ""
                },
                {
                  "value": "MassTransit",
                  "description": ""
                },
                {
                  "value": "Miscellaneous",
                  "description": ""
                },
                {
                  "value": "OtherNews",
                  "description": ""
                },
                {
                  "value": "PlannedEvent",
                  "description": ""
                },
                {
                  "value": "RoadHazard",
                  "description": ""
                },
                {
                  "value": "Construction",
                  "description": ""
                },
                {
                  "value": "Alert",
                  "description": ""
                },
                {
                  "value": "Weather",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "A bounding box for the area of interest. It must conform to GeoJSON format [minLon, minLat, maxLon, maxLat]",
            "required": true,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "minItems": 4,
            "maxItems": 4,
            "collectionFormat": "csv"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrafficIncidentResponse"
            }
          },
          "default": {
            "$ref": "../../../Common/preview/1.0/common.json#/responses/default"
          }
        }
      }
    }
  },
  "definitions": {
    "FeatureTypeEnum": {
      "type": "string",
      "description": "Specifies the `GeoJSON` type. The only supported object type is `FeatureCollection`. For more information, see [RFC 7946](https://www.rfc-editor.org/rfc/rfc7946).",
      "enum": [
        "FeatureCollection"
      ],
      "x-ms-enum": {
        "name": "FeatureTypeEnum",
        "modelAsString": true,
        "values": [
          {
            "value": "FeatureCollection",
            "description": "Specifies the `GeoJSON` `FeatureCollection` object type."
          }
        ]
      }
    },
    "FeaturesItemTypeEnum": {
      "type": "string",
      "description": "Specifies the `GeoJSON` type. The only supported object type is Feature. For more information, see [RFC 7946](https://www.rfc-editor.org/rfc/rfc7946).",
      "enum": [
        "Feature"
      ],
      "x-ms-enum": {
        "name": "FeaturesItemTypeEnum",
        "modelAsString": true,
        "values": [
          {
            "value": "Feature",
            "description": "Specifies the `GeoJSON` Feature object type."
          }
        ]
      }
    },
    "TrafficIncidentFeatureProperties": {
      "description": "Traffic Incident properties.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A description of the incident. \n\n Examples: \n\n - W 95th St between Switzer Rd and Bluejacket Dr - construction \n\n - WB Johnson Dr at I-435 - bridge repair",
          "type": "string"
        },
        "startTime": {
          "description": "The time the incident occurred. The time is specified as UTC time in milliseconds using the epoch (start time) of January 1, 1970, 00:00:00.\n\n Examples: Date(1295704800000)",
          "type": "object",
          "format": "UTC"
        },
        "endTime": {
          "description": "The time that the traffic incident will end. The time is specified as UTC time in milliseconds using the epoch (start time) of January 1, 1970, 00:00:00.\n\n Examples: Date(1295704800000)",
          "type": "object",
          "format": "UTC"
        },
        "id": {
          "description": "A unique ID for the incident.",
          "type": "number",
          "format": "float"
        },
        "lastModified": {
          "description": "The time the incident information was last updated. The time is specified as UTC time in milliseconds using the epoch (start time) of January 1, 1970, 00:00:00.\n\n Examples: Date(1295704800000)",
          "type": "object",
          "format": "dateTime"
        },
        "isRoadClosed": {
          "description": "A value of 'true' indicates that there is a road closure.",
          "type": "boolean"
        },
        "severity": {
          "description": "Specifies the level of importance of incident.\n\n - 1: LowImpact \n\n - 2: Minor \n\n - 3: Moderate \n\n- 4: Serious",
          "type": "number",
          "format": "int32"
        },
        "type": {
          "description": "Specifies the type of incident. \n\n - 1: Accident \n\n - 2: Congestion \n\n - 3: DisabledVehicle \n\n - 4: MassTransit \n\n - 5: Miscellaneous \n\n - 6: OtherNews \n\n - 7: PlannedEvent \n\n - 8: RoadHazard \n\n - 9: Construction \n\n - 10: Alert \n\n - 11: Weather",
          "type": "number",
          "format": "int32"
        },
        "title": {
          "description": "Names and direction of affected roads.",
          "type": "string"
        },
        "isTrafficJam": {
          "description": "Flag indicating that the area of road covered by this incident is experiencing abnormal traffic conditions resulting in non-typical delays.",
          "type": "boolean"
        }
      }
    },
    "TrafficIncidentFeaturesItem": {
      "type": "object",
      "description": "GeoJSON feature object that contains Geometry object and additional properties of traffic incidents.",
      "allOf": [
        {
          "type": "object",
          "description": "GeoJSON feature object that contains Geometry object and additional properties of traffic incidents.",
          "properties": {
            "type": {
              "$ref": "#/definitions/FeaturesItemTypeEnum"
            },
            "geometry": {
              "$ref": "../../../Common/preview/1.0/common.json#/definitions/GeoJsonMultiPoint"
            },
            "properties": {
              "$ref": "#/definitions/TrafficIncidentFeatureProperties"
            }
          }
        }
      ]
    },
    "TrafficIncidentResponse": {
      "description": "This object is returned from a successful Traffic incident call",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FeatureTypeEnum"
        },
        "features": {
          "type": "array",
          "description": "`GeoJSON` feature object that contains Geometry object and additional properties. Refer to [RFC 7946, Section 3.2](https://www.rfc-editor.org/rfc/rfc7946#section-3.2) for details.",
          "items": {
            "$ref": "#/definitions/TrafficIncidentFeaturesItem"
          }
        }
      }
    }
  }
}
